ARM GAS  C:\Users\86138\AppData\Local\Temp\ccc2taHa.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MOTOR_Direction,"ax",%progbits
  16              		.align	1
  17              		.global	MOTOR_Direction
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	MOTOR_Direction:
  25              	.LVL0:
  26              	.LFB67:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "dma.h"
  22:Core/Src/main.c **** #include "tim.h"
  23:Core/Src/main.c **** #include "usart.h"
  24:Core/Src/main.c **** #include "gpio.h"
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* USER CODE END Includes */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  C:\Users\86138\AppData\Local\Temp\ccc2taHa.s 			page 2


  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** typedef enum
  35:Core/Src/main.c **** {
  36:Core/Src/main.c ****   forward = 0,
  37:Core/Src/main.c ****   back
  38:Core/Src/main.c **** }Direction_Typedef; //the direction of motor
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** typedef struct
  41:Core/Src/main.c **** {
  42:Core/Src/main.c ****   Direction_Typedef direction;
  43:Core/Src/main.c ****   int velocity;
  44:Core/Src/main.c **** }Motor_Typedef;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PTD */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  49:Core/Src/main.c **** /* USER CODE BEGIN PD */
  50:Core/Src/main.c **** /* USER CODE END PD */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  53:Core/Src/main.c **** /* USER CODE BEGIN PM */
  54:Core/Src/main.c **** #define Wheel_L 10
  55:Core/Src/main.c **** /* USER CODE END PM */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* USER CODE BEGIN PV */
  60:Core/Src/main.c **** Motor_Typedef motor[5];
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** uint8_t RxBuffer[10];
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* USER CODE END PV */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  67:Core/Src/main.c **** void SystemClock_Config(void);
  68:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** void MOTOR_Direction(int16_t motor_number, Direction_Typedef direction);
  71:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim);
  72:Core/Src/main.c **** /* USER CODE END PFP */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  75:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /* USER CODE END 0 */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** /**
  80:Core/Src/main.c ****   * @brief  The application entry point.
  81:Core/Src/main.c ****   * @retval int
  82:Core/Src/main.c ****   */
  83:Core/Src/main.c **** int main(void)
  84:Core/Src/main.c **** {
  85:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE END 1 */
  88:Core/Src/main.c **** 
ARM GAS  C:\Users\86138\AppData\Local\Temp\ccc2taHa.s 			page 3


  89:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  92:Core/Src/main.c ****   HAL_Init();
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE END Init */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* Configure the system clock */
  99:Core/Src/main.c ****   SystemClock_Config();
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* USER CODE END SysInit */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* Initialize all configured peripherals */
 106:Core/Src/main.c ****   MX_GPIO_Init();
 107:Core/Src/main.c ****   MX_DMA_Init();
 108:Core/Src/main.c ****   MX_TIM1_Init();
 109:Core/Src/main.c ****   MX_TIM2_Init();
 110:Core/Src/main.c ****   MX_TIM3_Init();
 111:Core/Src/main.c ****   MX_TIM4_Init();
 112:Core/Src/main.c ****   MX_TIM5_Init();
 113:Core/Src/main.c ****   MX_UART4_Init();
 114:Core/Src/main.c ****   MX_UART5_Init();
 115:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 116:Core/Src/main.c ****   __HAL_TIM_CLEAR_IT(&htim1, TIM_IT_UPDATE);
 117:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim1);
 118:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 119:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_2);
 120:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_3);
 121:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_4);
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   HAL_TIM_Encoder_Start(&htim2, TIM_CHANNEL_ALL);
 124:Core/Src/main.c ****   HAL_TIM_Encoder_Start(&htim3, TIM_CHANNEL_ALL);
 125:Core/Src/main.c ****   HAL_TIM_Encoder_Start(&htim4, TIM_CHANNEL_ALL);
 126:Core/Src/main.c ****   HAL_TIM_Encoder_Start(&htim5, TIM_CHANNEL_ALL);
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* USER CODE END 2 */
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   /* Infinite loop */
 131:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 132:Core/Src/main.c ****   while (1)
 133:Core/Src/main.c ****   {
 134:Core/Src/main.c ****     /* USER CODE END WHILE */
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 137:Core/Src/main.c ****     MOTOR_Direction(1, forward);
 138:Core/Src/main.c ****     __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, 250);
 139:Core/Src/main.c ****     // u5_printf("HELLO WORLD!\n");
 140:Core/Src/main.c ****   }
 141:Core/Src/main.c ****   /* USER CODE END 3 */
 142:Core/Src/main.c **** }
 143:Core/Src/main.c **** 
 144:Core/Src/main.c **** /**
 145:Core/Src/main.c ****   * @brief System Clock Configuration
ARM GAS  C:\Users\86138\AppData\Local\Temp\ccc2taHa.s 			page 4


 146:Core/Src/main.c ****   * @retval None
 147:Core/Src/main.c ****   */
 148:Core/Src/main.c **** void SystemClock_Config(void)
 149:Core/Src/main.c **** {
 150:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 151:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 154:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 155:Core/Src/main.c ****   */
 156:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 157:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 158:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 159:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 163:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 164:Core/Src/main.c ****   {
 165:Core/Src/main.c ****     Error_Handler();
 166:Core/Src/main.c ****   }
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 169:Core/Src/main.c ****   */
 170:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 171:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 172:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 173:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 174:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 175:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 178:Core/Src/main.c ****   {
 179:Core/Src/main.c ****     Error_Handler();
 180:Core/Src/main.c ****   }
 181:Core/Src/main.c **** }
 182:Core/Src/main.c **** 
 183:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 184:Core/Src/main.c **** /**
 185:Core/Src/main.c ****   * @brief 电机正反�?
 186:Core/Src/main.c ****   * @param motor_number:电机序号，范�? 1~4
 187:Core/Src/main.c ****   * @param direction:正反转，forward为正转，back为反�?
 188:Core/Src/main.c ****   */
 189:Core/Src/main.c **** void MOTOR_Direction(int16_t motor_number, Direction_Typedef direction)
 190:Core/Src/main.c **** {       
  28              		.loc 1 190 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 190 1 is_stmt 0 view .LVU1
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 4, -16
  37              		.cfi_offset 5, -12
  38              		.cfi_offset 6, -8
  39              		.cfi_offset 14, -4
ARM GAS  C:\Users\86138\AppData\Local\Temp\ccc2taHa.s 			page 5


  40 0002 0546     		mov	r5, r0
  41 0004 0C46     		mov	r4, r1
 191:Core/Src/main.c ****   motor[motor_number].direction = direction;
  42              		.loc 1 191 3 is_stmt 1 view .LVU2
  43              		.loc 1 191 33 is_stmt 0 view .LVU3
  44 0006 3E4B     		ldr	r3, .L16
  45 0008 03F83010 		strb	r1, [r3, r0, lsl #3]
 192:Core/Src/main.c ****   if (direction == forward)
  46              		.loc 1 192 3 is_stmt 1 view .LVU4
  47              		.loc 1 192 6 is_stmt 0 view .LVU5
  48 000c 99B9     		cbnz	r1, .L2
 193:Core/Src/main.c ****   {
 194:Core/Src/main.c ****       switch (motor_number)
  49              		.loc 1 194 7 is_stmt 1 view .LVU6
  50 000e 431E     		subs	r3, r0, #1
  51 0010 032B     		cmp	r3, #3
  52 0012 10D8     		bhi	.L2
  53 0014 DFE803F0 		tbb	[pc, r3]
  54              	.L4:
  55 0018 02       		.byte	(.L7-.L4)/2
  56 0019 12       		.byte	(.L6-.L4)/2
  57 001a 1E       		.byte	(.L5-.L4)/2
  58 001b 2C       		.byte	(.L3-.L4)/2
  59              		.p2align 1
  60              	.L7:
 195:Core/Src/main.c ****       {
 196:Core/Src/main.c ****       case 1:
 197:Core/Src/main.c ****         HAL_GPIO_WritePin(Motor1_in1_GPIO_Port, Motor1_in1_Pin, 1);
  61              		.loc 1 197 9 view .LVU7
  62 001c 394E     		ldr	r6, .L16+4
  63 001e 0122     		movs	r2, #1
  64 0020 4FF48061 		mov	r1, #1024
  65              	.LVL1:
  66              		.loc 1 197 9 is_stmt 0 view .LVU8
  67 0024 3046     		mov	r0, r6
  68              	.LVL2:
  69              		.loc 1 197 9 view .LVU9
  70 0026 FFF7FEFF 		bl	HAL_GPIO_WritePin
  71              	.LVL3:
 198:Core/Src/main.c ****         HAL_GPIO_WritePin(Motor1_in2_GPIO_Port, Motor1_in2_Pin, 0);
  72              		.loc 1 198 9 is_stmt 1 view .LVU10
  73 002a 0022     		movs	r2, #0
  74 002c 4FF40061 		mov	r1, #2048
  75 0030 3046     		mov	r0, r6
  76 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
  77              	.LVL4:
 199:Core/Src/main.c ****         break;
  78              		.loc 1 199 9 view .LVU11
  79              	.L2:
 200:Core/Src/main.c ****       case 2:
 201:Core/Src/main.c ****         HAL_GPIO_WritePin(Motor2_in1_GPIO_Port, Motor2_in1_Pin, 1);
 202:Core/Src/main.c ****         HAL_GPIO_WritePin(Motor2_in2_GPIO_Port, Motor2_in2_Pin, 0);
 203:Core/Src/main.c ****         break;
 204:Core/Src/main.c ****       case 3:
 205:Core/Src/main.c ****         HAL_GPIO_WritePin(Motor3_in1_GPIO_Port, Motor3_in1_Pin, 1);
 206:Core/Src/main.c ****         HAL_GPIO_WritePin(Motor3_in2_GPIO_Port, Motor3_in2_Pin, 0);
 207:Core/Src/main.c ****         break;
ARM GAS  C:\Users\86138\AppData\Local\Temp\ccc2taHa.s 			page 6


 208:Core/Src/main.c ****       case 4:
 209:Core/Src/main.c ****         HAL_GPIO_WritePin(Motor4_in1_GPIO_Port, Motor4_in1_Pin, 1);
 210:Core/Src/main.c ****         HAL_GPIO_WritePin(Motor4_in2_GPIO_Port, Motor4_in2_Pin, 0);
 211:Core/Src/main.c ****         break;
 212:Core/Src/main.c **** 
 213:Core/Src/main.c ****       default:
 214:Core/Src/main.c ****         break;
 215:Core/Src/main.c ****       }
 216:Core/Src/main.c ****   }
 217:Core/Src/main.c ****   if (direction == back)
  80              		.loc 1 217 3 view .LVU12
  81              		.loc 1 217 6 is_stmt 0 view .LVU13
  82 0036 012C     		cmp	r4, #1
  83 0038 26D0     		beq	.L15
  84              	.L1:
 218:Core/Src/main.c ****   {
 219:Core/Src/main.c ****       switch (motor_number)
 220:Core/Src/main.c ****       {
 221:Core/Src/main.c ****       case 1:
 222:Core/Src/main.c ****         HAL_GPIO_WritePin(Motor1_in1_GPIO_Port, Motor1_in1_Pin, 0);
 223:Core/Src/main.c ****         HAL_GPIO_WritePin(Motor1_in2_GPIO_Port, Motor1_in2_Pin, 1);
 224:Core/Src/main.c ****         break;
 225:Core/Src/main.c ****       case 2:
 226:Core/Src/main.c ****         HAL_GPIO_WritePin(Motor2_in1_GPIO_Port, Motor2_in1_Pin, 0);
 227:Core/Src/main.c ****         HAL_GPIO_WritePin(Motor2_in2_GPIO_Port, Motor2_in2_Pin, 1);
 228:Core/Src/main.c ****         break;
 229:Core/Src/main.c ****       case 3:
 230:Core/Src/main.c ****         HAL_GPIO_WritePin(Motor3_in1_GPIO_Port, Motor3_in1_Pin, 0);
 231:Core/Src/main.c ****         HAL_GPIO_WritePin(Motor3_in2_GPIO_Port, Motor3_in2_Pin, 1);
 232:Core/Src/main.c ****         break;
 233:Core/Src/main.c ****       case 4:
 234:Core/Src/main.c ****         HAL_GPIO_WritePin(Motor4_in1_GPIO_Port, Motor4_in1_Pin, 0);
 235:Core/Src/main.c ****         HAL_GPIO_WritePin(Motor4_in2_GPIO_Port, Motor4_in2_Pin, 1);
 236:Core/Src/main.c ****         break;
 237:Core/Src/main.c ****       }
 238:Core/Src/main.c ****   }
 239:Core/Src/main.c **** }
  85              		.loc 1 239 1 view .LVU14
  86 003a 70BD     		pop	{r4, r5, r6, pc}
  87              	.LVL5:
  88              	.L6:
 201:Core/Src/main.c ****         HAL_GPIO_WritePin(Motor2_in2_GPIO_Port, Motor2_in2_Pin, 0);
  89              		.loc 1 201 9 is_stmt 1 view .LVU15
  90 003c 314E     		ldr	r6, .L16+4
  91 003e 0122     		movs	r2, #1
  92 0040 0221     		movs	r1, #2
  93              	.LVL6:
 201:Core/Src/main.c ****         HAL_GPIO_WritePin(Motor2_in2_GPIO_Port, Motor2_in2_Pin, 0);
  94              		.loc 1 201 9 is_stmt 0 view .LVU16
  95 0042 3046     		mov	r0, r6
  96              	.LVL7:
 201:Core/Src/main.c ****         HAL_GPIO_WritePin(Motor2_in2_GPIO_Port, Motor2_in2_Pin, 0);
  97              		.loc 1 201 9 view .LVU17
  98 0044 FFF7FEFF 		bl	HAL_GPIO_WritePin
  99              	.LVL8:
 202:Core/Src/main.c ****         break;
 100              		.loc 1 202 9 is_stmt 1 view .LVU18
ARM GAS  C:\Users\86138\AppData\Local\Temp\ccc2taHa.s 			page 7


 101 0048 0022     		movs	r2, #0
 102 004a 0421     		movs	r1, #4
 103 004c 3046     		mov	r0, r6
 104 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
 105              	.LVL9:
 203:Core/Src/main.c ****       case 3:
 106              		.loc 1 203 9 view .LVU19
 107 0052 F0E7     		b	.L2
 108              	.LVL10:
 109              	.L5:
 205:Core/Src/main.c ****         HAL_GPIO_WritePin(Motor3_in2_GPIO_Port, Motor3_in2_Pin, 0);
 110              		.loc 1 205 9 view .LVU20
 111 0054 2B4E     		ldr	r6, .L16+4
 112 0056 0122     		movs	r2, #1
 113 0058 4FF48041 		mov	r1, #16384
 114              	.LVL11:
 205:Core/Src/main.c ****         HAL_GPIO_WritePin(Motor3_in2_GPIO_Port, Motor3_in2_Pin, 0);
 115              		.loc 1 205 9 is_stmt 0 view .LVU21
 116 005c 3046     		mov	r0, r6
 117              	.LVL12:
 205:Core/Src/main.c ****         HAL_GPIO_WritePin(Motor3_in2_GPIO_Port, Motor3_in2_Pin, 0);
 118              		.loc 1 205 9 view .LVU22
 119 005e FFF7FEFF 		bl	HAL_GPIO_WritePin
 120              	.LVL13:
 206:Core/Src/main.c ****         break;
 121              		.loc 1 206 9 is_stmt 1 view .LVU23
 122 0062 0022     		movs	r2, #0
 123 0064 4FF40041 		mov	r1, #32768
 124 0068 3046     		mov	r0, r6
 125 006a FFF7FEFF 		bl	HAL_GPIO_WritePin
 126              	.LVL14:
 207:Core/Src/main.c ****       case 4:
 127              		.loc 1 207 9 view .LVU24
 128 006e E2E7     		b	.L2
 129              	.LVL15:
 130              	.L3:
 209:Core/Src/main.c ****         HAL_GPIO_WritePin(Motor4_in2_GPIO_Port, Motor4_in2_Pin, 0);
 131              		.loc 1 209 9 view .LVU25
 132 0070 254E     		ldr	r6, .L16+8
 133 0072 0122     		movs	r2, #1
 134 0074 4021     		movs	r1, #64
 135              	.LVL16:
 209:Core/Src/main.c ****         HAL_GPIO_WritePin(Motor4_in2_GPIO_Port, Motor4_in2_Pin, 0);
 136              		.loc 1 209 9 is_stmt 0 view .LVU26
 137 0076 3046     		mov	r0, r6
 138              	.LVL17:
 209:Core/Src/main.c ****         HAL_GPIO_WritePin(Motor4_in2_GPIO_Port, Motor4_in2_Pin, 0);
 139              		.loc 1 209 9 view .LVU27
 140 0078 FFF7FEFF 		bl	HAL_GPIO_WritePin
 141              	.LVL18:
 210:Core/Src/main.c ****         break;
 142              		.loc 1 210 9 is_stmt 1 view .LVU28
 143 007c 0022     		movs	r2, #0
 144 007e 8021     		movs	r1, #128
 145 0080 3046     		mov	r0, r6
 146 0082 FFF7FEFF 		bl	HAL_GPIO_WritePin
 147              	.LVL19:
ARM GAS  C:\Users\86138\AppData\Local\Temp\ccc2taHa.s 			page 8


 211:Core/Src/main.c **** 
 148              		.loc 1 211 9 view .LVU29
 149 0086 D6E7     		b	.L2
 150              	.L15:
 219:Core/Src/main.c ****       {
 151              		.loc 1 219 7 view .LVU30
 152 0088 013D     		subs	r5, r5, #1
 153 008a 032D     		cmp	r5, #3
 154 008c D5D8     		bhi	.L1
 155 008e DFE805F0 		tbb	[pc, r5]
 156              	.L10:
 157 0092 02       		.byte	(.L13-.L10)/2
 158 0093 10       		.byte	(.L12-.L10)/2
 159 0094 1C       		.byte	(.L11-.L10)/2
 160 0095 2A       		.byte	(.L9-.L10)/2
 161              		.p2align 1
 162              	.L13:
 222:Core/Src/main.c ****         HAL_GPIO_WritePin(Motor1_in2_GPIO_Port, Motor1_in2_Pin, 1);
 163              		.loc 1 222 9 view .LVU31
 164 0096 1B4C     		ldr	r4, .L16+4
 165 0098 0022     		movs	r2, #0
 166 009a 4FF48061 		mov	r1, #1024
 167 009e 2046     		mov	r0, r4
 168 00a0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 169              	.LVL20:
 223:Core/Src/main.c ****         break;
 170              		.loc 1 223 9 view .LVU32
 171 00a4 0122     		movs	r2, #1
 172 00a6 4FF40061 		mov	r1, #2048
 173 00aa 2046     		mov	r0, r4
 174 00ac FFF7FEFF 		bl	HAL_GPIO_WritePin
 175              	.LVL21:
 224:Core/Src/main.c ****       case 2:
 176              		.loc 1 224 9 view .LVU33
 177 00b0 C3E7     		b	.L1
 178              	.L12:
 226:Core/Src/main.c ****         HAL_GPIO_WritePin(Motor2_in2_GPIO_Port, Motor2_in2_Pin, 1);
 179              		.loc 1 226 9 view .LVU34
 180 00b2 144C     		ldr	r4, .L16+4
 181 00b4 0022     		movs	r2, #0
 182 00b6 0221     		movs	r1, #2
 183 00b8 2046     		mov	r0, r4
 184 00ba FFF7FEFF 		bl	HAL_GPIO_WritePin
 185              	.LVL22:
 227:Core/Src/main.c ****         break;
 186              		.loc 1 227 9 view .LVU35
 187 00be 0122     		movs	r2, #1
 188 00c0 0421     		movs	r1, #4
 189 00c2 2046     		mov	r0, r4
 190 00c4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 191              	.LVL23:
 228:Core/Src/main.c ****       case 3:
 192              		.loc 1 228 9 view .LVU36
 193 00c8 B7E7     		b	.L1
 194              	.L11:
 230:Core/Src/main.c ****         HAL_GPIO_WritePin(Motor3_in2_GPIO_Port, Motor3_in2_Pin, 1);
 195              		.loc 1 230 9 view .LVU37
ARM GAS  C:\Users\86138\AppData\Local\Temp\ccc2taHa.s 			page 9


 196 00ca 0E4C     		ldr	r4, .L16+4
 197 00cc 0022     		movs	r2, #0
 198 00ce 4FF48041 		mov	r1, #16384
 199 00d2 2046     		mov	r0, r4
 200 00d4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 201              	.LVL24:
 231:Core/Src/main.c ****         break;
 202              		.loc 1 231 9 view .LVU38
 203 00d8 0122     		movs	r2, #1
 204 00da 4FF40041 		mov	r1, #32768
 205 00de 2046     		mov	r0, r4
 206 00e0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 207              	.LVL25:
 232:Core/Src/main.c ****       case 4:
 208              		.loc 1 232 9 view .LVU39
 209 00e4 A9E7     		b	.L1
 210              	.L9:
 234:Core/Src/main.c ****         HAL_GPIO_WritePin(Motor4_in2_GPIO_Port, Motor4_in2_Pin, 1);
 211              		.loc 1 234 9 view .LVU40
 212 00e6 084C     		ldr	r4, .L16+8
 213 00e8 0022     		movs	r2, #0
 214 00ea 4021     		movs	r1, #64
 215 00ec 2046     		mov	r0, r4
 216 00ee FFF7FEFF 		bl	HAL_GPIO_WritePin
 217              	.LVL26:
 235:Core/Src/main.c ****         break;
 218              		.loc 1 235 9 view .LVU41
 219 00f2 0122     		movs	r2, #1
 220 00f4 8021     		movs	r1, #128
 221 00f6 2046     		mov	r0, r4
 222 00f8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 223              	.LVL27:
 236:Core/Src/main.c ****       }
 224              		.loc 1 236 9 view .LVU42
 225              		.loc 1 239 1 is_stmt 0 view .LVU43
 226 00fc 9DE7     		b	.L1
 227              	.L17:
 228 00fe 00BF     		.align	2
 229              	.L16:
 230 0100 00000000 		.word	.LANCHOR0
 231 0104 000C0140 		.word	1073810432
 232 0108 00100140 		.word	1073811456
 233              		.cfi_endproc
 234              	.LFE67:
 236              		.section	.rodata.HAL_TIM_PeriodElapsedCallback.str1.4,"aMS",%progbits,1
 237              		.align	2
 238              	.LC0:
 239 0000 73706565 		.ascii	"speed1: %ld\015\012\000"
 239      64313A20 
 239      256C640D 
 239      0A00
 240              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 241              		.align	1
 242              		.global	HAL_TIM_PeriodElapsedCallback
 243              		.syntax unified
 244              		.thumb
 245              		.thumb_func
ARM GAS  C:\Users\86138\AppData\Local\Temp\ccc2taHa.s 			page 10


 246              		.fpu softvfp
 248              	HAL_TIM_PeriodElapsedCallback:
 249              	.LVL28:
 250              	.LFB68:
 240:Core/Src/main.c **** 
 241:Core/Src/main.c **** 
 242:Core/Src/main.c **** /**
 243:Core/Src/main.c ****   * @brief TIM中断回调函数
 244:Core/Src/main.c ****   * @param htim：�?�择是哪个定时器
 245:Core/Src/main.c ****   */
 246:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 247:Core/Src/main.c **** {
 251              		.loc 1 247 1 is_stmt 1 view -0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 0
 254              		@ frame_needed = 0, uses_anonymous_args = 0
 255              		.loc 1 247 1 is_stmt 0 view .LVU45
 256 0000 38B5     		push	{r3, r4, r5, lr}
 257              	.LCFI1:
 258              		.cfi_def_cfa_offset 16
 259              		.cfi_offset 3, -16
 260              		.cfi_offset 4, -12
 261              		.cfi_offset 5, -8
 262              		.cfi_offset 14, -4
 248:Core/Src/main.c ****   if (htim->Instance == TIM1)
 263              		.loc 1 248 3 is_stmt 1 view .LVU46
 264              		.loc 1 248 11 is_stmt 0 view .LVU47
 265 0002 0268     		ldr	r2, [r0]
 266              		.loc 1 248 6 view .LVU48
 267 0004 0C4B     		ldr	r3, .L22
 268 0006 9A42     		cmp	r2, r3
 269 0008 00D0     		beq	.L21
 270              	.LVL29:
 271              	.L18:
 249:Core/Src/main.c ****   {
 250:Core/Src/main.c ****     int32_t count1 = __HAL_TIM_GET_COUNTER(&htim2);//电机1的编码器计数
 251:Core/Src/main.c ****     int32_t count2 = __HAL_TIM_GET_COUNTER(&htim3);//电机2的编码器计数
 252:Core/Src/main.c ****     int32_t count3 = __HAL_TIM_GET_COUNTER(&htim4);//电机3的编码器计数
 253:Core/Src/main.c ****     int32_t count4 = __HAL_TIM_GET_COUNTER(&htim5);//电机4的编码器计数
 254:Core/Src/main.c ****     
 255:Core/Src/main.c ****     __HAL_TIM_SetCounter(&htim2, 0);
 256:Core/Src/main.c ****     __HAL_TIM_SetCounter(&htim3, 0);
 257:Core/Src/main.c ****     __HAL_TIM_SetCounter(&htim4, 0);
 258:Core/Src/main.c ****     __HAL_TIM_SetCounter(&htim5, 0);
 259:Core/Src/main.c **** 
 260:Core/Src/main.c ****     float speed1 = (float)count1 / 4 / 0.001 / 260 * Wheel_L;
 261:Core/Src/main.c ****     float speed2 = (float)count2 / 4 / 0.001 / 260 * Wheel_L;
 262:Core/Src/main.c ****     float speed3 = (float)count3 / 4 / 0.001 / 260 * Wheel_L;
 263:Core/Src/main.c ****     float speed4 = (float)count4 / 4 / 0.001 / 260 * Wheel_L;
 264:Core/Src/main.c **** 
 265:Core/Src/main.c ****     u5_printf("speed1: %ld\r\n", count1);
 266:Core/Src/main.c ****   }
 267:Core/Src/main.c **** }
 272              		.loc 1 267 1 view .LVU49
 273 000a 38BD     		pop	{r3, r4, r5, pc}
 274              	.LVL30:
 275              	.L21:
ARM GAS  C:\Users\86138\AppData\Local\Temp\ccc2taHa.s 			page 11


 276              	.LBB4:
 250:Core/Src/main.c ****     int32_t count2 = __HAL_TIM_GET_COUNTER(&htim3);//电机2的编码器计数
 277              		.loc 1 250 5 is_stmt 1 view .LVU50
 250:Core/Src/main.c ****     int32_t count2 = __HAL_TIM_GET_COUNTER(&htim3);//电机2的编码器计数
 278              		.loc 1 250 22 is_stmt 0 view .LVU51
 279 000c 0B4B     		ldr	r3, .L22+4
 280 000e 1D68     		ldr	r5, [r3]
 281 0010 696A     		ldr	r1, [r5, #36]
 282              	.LVL31:
 251:Core/Src/main.c ****     int32_t count3 = __HAL_TIM_GET_COUNTER(&htim4);//电机3的编码器计数
 283              		.loc 1 251 5 is_stmt 1 view .LVU52
 251:Core/Src/main.c ****     int32_t count3 = __HAL_TIM_GET_COUNTER(&htim4);//电机3的编码器计数
 284              		.loc 1 251 22 is_stmt 0 view .LVU53
 285 0012 0B4B     		ldr	r3, .L22+8
 286 0014 1C68     		ldr	r4, [r3]
 287 0016 636A     		ldr	r3, [r4, #36]
 288              	.LVL32:
 252:Core/Src/main.c ****     int32_t count4 = __HAL_TIM_GET_COUNTER(&htim5);//电机4的编码器计数
 289              		.loc 1 252 5 is_stmt 1 view .LVU54
 252:Core/Src/main.c ****     int32_t count4 = __HAL_TIM_GET_COUNTER(&htim5);//电机4的编码器计数
 290              		.loc 1 252 22 is_stmt 0 view .LVU55
 291 0018 0A4B     		ldr	r3, .L22+12
 292 001a 1868     		ldr	r0, [r3]
 293              	.LVL33:
 252:Core/Src/main.c ****     int32_t count4 = __HAL_TIM_GET_COUNTER(&htim5);//电机4的编码器计数
 294              		.loc 1 252 22 view .LVU56
 295 001c 436A     		ldr	r3, [r0, #36]
 296              	.LVL34:
 253:Core/Src/main.c ****     
 297              		.loc 1 253 5 is_stmt 1 view .LVU57
 253:Core/Src/main.c ****     
 298              		.loc 1 253 22 is_stmt 0 view .LVU58
 299 001e 0A4B     		ldr	r3, .L22+16
 300 0020 1A68     		ldr	r2, [r3]
 301 0022 536A     		ldr	r3, [r2, #36]
 302              	.LVL35:
 255:Core/Src/main.c ****     __HAL_TIM_SetCounter(&htim3, 0);
 303              		.loc 1 255 5 is_stmt 1 view .LVU59
 304 0024 0023     		movs	r3, #0
 305 0026 6B62     		str	r3, [r5, #36]
 256:Core/Src/main.c ****     __HAL_TIM_SetCounter(&htim4, 0);
 306              		.loc 1 256 5 view .LVU60
 307 0028 6362     		str	r3, [r4, #36]
 257:Core/Src/main.c ****     __HAL_TIM_SetCounter(&htim5, 0);
 308              		.loc 1 257 5 view .LVU61
 309 002a 4362     		str	r3, [r0, #36]
 258:Core/Src/main.c **** 
 310              		.loc 1 258 5 view .LVU62
 311 002c 5362     		str	r3, [r2, #36]
 260:Core/Src/main.c ****     float speed2 = (float)count2 / 4 / 0.001 / 260 * Wheel_L;
 312              		.loc 1 260 5 view .LVU63
 313              	.LVL36:
 261:Core/Src/main.c ****     float speed3 = (float)count3 / 4 / 0.001 / 260 * Wheel_L;
 314              		.loc 1 261 5 view .LVU64
 262:Core/Src/main.c ****     float speed4 = (float)count4 / 4 / 0.001 / 260 * Wheel_L;
 315              		.loc 1 262 5 view .LVU65
 263:Core/Src/main.c **** 
ARM GAS  C:\Users\86138\AppData\Local\Temp\ccc2taHa.s 			page 12


 316              		.loc 1 263 5 view .LVU66
 265:Core/Src/main.c ****   }
 317              		.loc 1 265 5 view .LVU67
 318 002e 0748     		ldr	r0, .L22+20
 319 0030 FFF7FEFF 		bl	u5_printf
 320              	.LVL37:
 265:Core/Src/main.c ****   }
 321              		.loc 1 265 5 is_stmt 0 view .LVU68
 322              	.LBE4:
 323              		.loc 1 267 1 view .LVU69
 324 0034 E9E7     		b	.L18
 325              	.L23:
 326 0036 00BF     		.align	2
 327              	.L22:
 328 0038 002C0140 		.word	1073818624
 329 003c 00000000 		.word	htim2
 330 0040 00000000 		.word	htim3
 331 0044 00000000 		.word	htim4
 332 0048 00000000 		.word	htim5
 333 004c 00000000 		.word	.LC0
 334              		.cfi_endproc
 335              	.LFE68:
 337              		.section	.text.Error_Handler,"ax",%progbits
 338              		.align	1
 339              		.global	Error_Handler
 340              		.syntax unified
 341              		.thumb
 342              		.thumb_func
 343              		.fpu softvfp
 345              	Error_Handler:
 346              	.LFB69:
 268:Core/Src/main.c **** 
 269:Core/Src/main.c **** 
 270:Core/Src/main.c **** 
 271:Core/Src/main.c **** /* USER CODE END 4 */
 272:Core/Src/main.c **** 
 273:Core/Src/main.c **** /**
 274:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 275:Core/Src/main.c ****   * @retval None
 276:Core/Src/main.c ****   */
 277:Core/Src/main.c **** void Error_Handler(void)
 278:Core/Src/main.c **** {
 347              		.loc 1 278 1 is_stmt 1 view -0
 348              		.cfi_startproc
 349              		@ Volatile: function does not return.
 350              		@ args = 0, pretend = 0, frame = 0
 351              		@ frame_needed = 0, uses_anonymous_args = 0
 352              		@ link register save eliminated.
 279:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 280:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 281:Core/Src/main.c ****   __disable_irq();
 353              		.loc 1 281 3 view .LVU71
 354              	.LBB5:
 355              	.LBI5:
 356              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
ARM GAS  C:\Users\86138\AppData\Local\Temp\ccc2taHa.s 			page 13


   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
ARM GAS  C:\Users\86138\AppData\Local\Temp\ccc2taHa.s 			page 14


  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\86138\AppData\Local\Temp\ccc2taHa.s 			page 15


 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 357              		.loc 2 140 27 view .LVU72
 358              	.LBB6:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 359              		.loc 2 142 3 view .LVU73
 360              		.syntax unified
 361              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 362 0000 72B6     		cpsid i
 363              	@ 0 "" 2
 364              		.thumb
 365              		.syntax unified
 366              	.L25:
 367              	.LBE6:
 368              	.LBE5:
 282:Core/Src/main.c ****   while (1)
 369              		.loc 1 282 3 discriminator 1 view .LVU74
 283:Core/Src/main.c ****   {
 284:Core/Src/main.c ****   }
 370              		.loc 1 284 3 discriminator 1 view .LVU75
 282:Core/Src/main.c ****   while (1)
 371              		.loc 1 282 9 discriminator 1 view .LVU76
 372 0002 FEE7     		b	.L25
 373              		.cfi_endproc
 374              	.LFE69:
 376              		.section	.text.SystemClock_Config,"ax",%progbits
 377              		.align	1
 378              		.global	SystemClock_Config
 379              		.syntax unified
 380              		.thumb
 381              		.thumb_func
 382              		.fpu softvfp
 384              	SystemClock_Config:
 385              	.LFB66:
ARM GAS  C:\Users\86138\AppData\Local\Temp\ccc2taHa.s 			page 16


 149:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 386              		.loc 1 149 1 view -0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 64
 389              		@ frame_needed = 0, uses_anonymous_args = 0
 390 0000 00B5     		push	{lr}
 391              	.LCFI2:
 392              		.cfi_def_cfa_offset 4
 393              		.cfi_offset 14, -4
 394 0002 91B0     		sub	sp, sp, #68
 395              	.LCFI3:
 396              		.cfi_def_cfa_offset 72
 150:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 397              		.loc 1 150 3 view .LVU78
 150:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 398              		.loc 1 150 22 is_stmt 0 view .LVU79
 399 0004 2822     		movs	r2, #40
 400 0006 0021     		movs	r1, #0
 401 0008 06A8     		add	r0, sp, #24
 402 000a FFF7FEFF 		bl	memset
 403              	.LVL38:
 151:Core/Src/main.c **** 
 404              		.loc 1 151 3 is_stmt 1 view .LVU80
 151:Core/Src/main.c **** 
 405              		.loc 1 151 22 is_stmt 0 view .LVU81
 406 000e 0023     		movs	r3, #0
 407 0010 0193     		str	r3, [sp, #4]
 408 0012 0293     		str	r3, [sp, #8]
 409 0014 0393     		str	r3, [sp, #12]
 410 0016 0493     		str	r3, [sp, #16]
 411 0018 0593     		str	r3, [sp, #20]
 156:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 412              		.loc 1 156 3 is_stmt 1 view .LVU82
 156:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 413              		.loc 1 156 36 is_stmt 0 view .LVU83
 414 001a 0122     		movs	r2, #1
 415 001c 0692     		str	r2, [sp, #24]
 157:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 416              		.loc 1 157 3 is_stmt 1 view .LVU84
 157:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 417              		.loc 1 157 30 is_stmt 0 view .LVU85
 418 001e 4FF48033 		mov	r3, #65536
 419 0022 0793     		str	r3, [sp, #28]
 158:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 420              		.loc 1 158 3 is_stmt 1 view .LVU86
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 421              		.loc 1 159 3 view .LVU87
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 422              		.loc 1 159 30 is_stmt 0 view .LVU88
 423 0024 0A92     		str	r2, [sp, #40]
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 424              		.loc 1 160 3 is_stmt 1 view .LVU89
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 425              		.loc 1 160 34 is_stmt 0 view .LVU90
 426 0026 0222     		movs	r2, #2
 427 0028 0D92     		str	r2, [sp, #52]
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
ARM GAS  C:\Users\86138\AppData\Local\Temp\ccc2taHa.s 			page 17


 428              		.loc 1 161 3 is_stmt 1 view .LVU91
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 429              		.loc 1 161 35 is_stmt 0 view .LVU92
 430 002a 0E93     		str	r3, [sp, #56]
 162:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 431              		.loc 1 162 3 is_stmt 1 view .LVU93
 162:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 432              		.loc 1 162 32 is_stmt 0 view .LVU94
 433 002c 4FF4E013 		mov	r3, #1835008
 434 0030 0F93     		str	r3, [sp, #60]
 163:Core/Src/main.c ****   {
 435              		.loc 1 163 3 is_stmt 1 view .LVU95
 163:Core/Src/main.c ****   {
 436              		.loc 1 163 7 is_stmt 0 view .LVU96
 437 0032 06A8     		add	r0, sp, #24
 438 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 439              	.LVL39:
 163:Core/Src/main.c ****   {
 440              		.loc 1 163 6 view .LVU97
 441 0038 80B9     		cbnz	r0, .L30
 170:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 442              		.loc 1 170 3 is_stmt 1 view .LVU98
 170:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 443              		.loc 1 170 31 is_stmt 0 view .LVU99
 444 003a 0F23     		movs	r3, #15
 445 003c 0193     		str	r3, [sp, #4]
 172:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 446              		.loc 1 172 3 is_stmt 1 view .LVU100
 172:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 447              		.loc 1 172 34 is_stmt 0 view .LVU101
 448 003e 0221     		movs	r1, #2
 449 0040 0291     		str	r1, [sp, #8]
 173:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 450              		.loc 1 173 3 is_stmt 1 view .LVU102
 173:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 451              		.loc 1 173 35 is_stmt 0 view .LVU103
 452 0042 0023     		movs	r3, #0
 453 0044 0393     		str	r3, [sp, #12]
 174:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 454              		.loc 1 174 3 is_stmt 1 view .LVU104
 174:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 455              		.loc 1 174 36 is_stmt 0 view .LVU105
 456 0046 4FF48062 		mov	r2, #1024
 457 004a 0492     		str	r2, [sp, #16]
 175:Core/Src/main.c **** 
 458              		.loc 1 175 3 is_stmt 1 view .LVU106
 175:Core/Src/main.c **** 
 459              		.loc 1 175 36 is_stmt 0 view .LVU107
 460 004c 0593     		str	r3, [sp, #20]
 177:Core/Src/main.c ****   {
 461              		.loc 1 177 3 is_stmt 1 view .LVU108
 177:Core/Src/main.c ****   {
 462              		.loc 1 177 7 is_stmt 0 view .LVU109
 463 004e 01A8     		add	r0, sp, #4
 464 0050 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 465              	.LVL40:
 177:Core/Src/main.c ****   {
ARM GAS  C:\Users\86138\AppData\Local\Temp\ccc2taHa.s 			page 18


 466              		.loc 1 177 6 view .LVU110
 467 0054 20B9     		cbnz	r0, .L31
 181:Core/Src/main.c **** 
 468              		.loc 1 181 1 view .LVU111
 469 0056 11B0     		add	sp, sp, #68
 470              	.LCFI4:
 471              		.cfi_remember_state
 472              		.cfi_def_cfa_offset 4
 473              		@ sp needed
 474 0058 5DF804FB 		ldr	pc, [sp], #4
 475              	.L30:
 476              	.LCFI5:
 477              		.cfi_restore_state
 165:Core/Src/main.c ****   }
 478              		.loc 1 165 5 is_stmt 1 view .LVU112
 479 005c FFF7FEFF 		bl	Error_Handler
 480              	.LVL41:
 481              	.L31:
 179:Core/Src/main.c ****   }
 482              		.loc 1 179 5 view .LVU113
 483 0060 FFF7FEFF 		bl	Error_Handler
 484              	.LVL42:
 485              		.cfi_endproc
 486              	.LFE66:
 488              		.section	.text.main,"ax",%progbits
 489              		.align	1
 490              		.global	main
 491              		.syntax unified
 492              		.thumb
 493              		.thumb_func
 494              		.fpu softvfp
 496              	main:
 497              	.LFB65:
  84:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 498              		.loc 1 84 1 view -0
 499              		.cfi_startproc
 500              		@ Volatile: function does not return.
 501              		@ args = 0, pretend = 0, frame = 0
 502              		@ frame_needed = 0, uses_anonymous_args = 0
 503 0000 08B5     		push	{r3, lr}
 504              	.LCFI6:
 505              		.cfi_def_cfa_offset 8
 506              		.cfi_offset 3, -8
 507              		.cfi_offset 14, -4
  92:Core/Src/main.c **** 
 508              		.loc 1 92 3 view .LVU115
 509 0002 FFF7FEFF 		bl	HAL_Init
 510              	.LVL43:
  99:Core/Src/main.c **** 
 511              		.loc 1 99 3 view .LVU116
 512 0006 FFF7FEFF 		bl	SystemClock_Config
 513              	.LVL44:
 106:Core/Src/main.c ****   MX_DMA_Init();
 514              		.loc 1 106 3 view .LVU117
 515 000a FFF7FEFF 		bl	MX_GPIO_Init
 516              	.LVL45:
 107:Core/Src/main.c ****   MX_TIM1_Init();
ARM GAS  C:\Users\86138\AppData\Local\Temp\ccc2taHa.s 			page 19


 517              		.loc 1 107 3 view .LVU118
 518 000e FFF7FEFF 		bl	MX_DMA_Init
 519              	.LVL46:
 108:Core/Src/main.c ****   MX_TIM2_Init();
 520              		.loc 1 108 3 view .LVU119
 521 0012 FFF7FEFF 		bl	MX_TIM1_Init
 522              	.LVL47:
 109:Core/Src/main.c ****   MX_TIM3_Init();
 523              		.loc 1 109 3 view .LVU120
 524 0016 FFF7FEFF 		bl	MX_TIM2_Init
 525              	.LVL48:
 110:Core/Src/main.c ****   MX_TIM4_Init();
 526              		.loc 1 110 3 view .LVU121
 527 001a FFF7FEFF 		bl	MX_TIM3_Init
 528              	.LVL49:
 111:Core/Src/main.c ****   MX_TIM5_Init();
 529              		.loc 1 111 3 view .LVU122
 530 001e FFF7FEFF 		bl	MX_TIM4_Init
 531              	.LVL50:
 112:Core/Src/main.c ****   MX_UART4_Init();
 532              		.loc 1 112 3 view .LVU123
 533 0022 FFF7FEFF 		bl	MX_TIM5_Init
 534              	.LVL51:
 113:Core/Src/main.c ****   MX_UART5_Init();
 535              		.loc 1 113 3 view .LVU124
 536 0026 FFF7FEFF 		bl	MX_UART4_Init
 537              	.LVL52:
 114:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 538              		.loc 1 114 3 view .LVU125
 539 002a FFF7FEFF 		bl	MX_UART5_Init
 540              	.LVL53:
 116:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim1);
 541              		.loc 1 116 3 view .LVU126
 542 002e 184C     		ldr	r4, .L35
 543 0030 2368     		ldr	r3, [r4]
 544 0032 6FF00102 		mvn	r2, #1
 545 0036 1A61     		str	r2, [r3, #16]
 117:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 546              		.loc 1 117 3 view .LVU127
 547 0038 2046     		mov	r0, r4
 548 003a FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 549              	.LVL54:
 118:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_2);
 550              		.loc 1 118 3 view .LVU128
 551 003e 0021     		movs	r1, #0
 552 0040 2046     		mov	r0, r4
 553 0042 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 554              	.LVL55:
 119:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_3);
 555              		.loc 1 119 3 view .LVU129
 556 0046 0421     		movs	r1, #4
 557 0048 2046     		mov	r0, r4
 558 004a FFF7FEFF 		bl	HAL_TIM_PWM_Start
 559              	.LVL56:
 120:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_4);
 560              		.loc 1 120 3 view .LVU130
 561 004e 0821     		movs	r1, #8
ARM GAS  C:\Users\86138\AppData\Local\Temp\ccc2taHa.s 			page 20


 562 0050 2046     		mov	r0, r4
 563 0052 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 564              	.LVL57:
 121:Core/Src/main.c **** 
 565              		.loc 1 121 3 view .LVU131
 566 0056 0C21     		movs	r1, #12
 567 0058 2046     		mov	r0, r4
 568 005a FFF7FEFF 		bl	HAL_TIM_PWM_Start
 569              	.LVL58:
 123:Core/Src/main.c ****   HAL_TIM_Encoder_Start(&htim3, TIM_CHANNEL_ALL);
 570              		.loc 1 123 3 view .LVU132
 571 005e 3C21     		movs	r1, #60
 572 0060 0C48     		ldr	r0, .L35+4
 573 0062 FFF7FEFF 		bl	HAL_TIM_Encoder_Start
 574              	.LVL59:
 124:Core/Src/main.c ****   HAL_TIM_Encoder_Start(&htim4, TIM_CHANNEL_ALL);
 575              		.loc 1 124 3 view .LVU133
 576 0066 3C21     		movs	r1, #60
 577 0068 0B48     		ldr	r0, .L35+8
 578 006a FFF7FEFF 		bl	HAL_TIM_Encoder_Start
 579              	.LVL60:
 125:Core/Src/main.c ****   HAL_TIM_Encoder_Start(&htim5, TIM_CHANNEL_ALL);
 580              		.loc 1 125 3 view .LVU134
 581 006e 3C21     		movs	r1, #60
 582 0070 0A48     		ldr	r0, .L35+12
 583 0072 FFF7FEFF 		bl	HAL_TIM_Encoder_Start
 584              	.LVL61:
 126:Core/Src/main.c **** 
 585              		.loc 1 126 3 view .LVU135
 586 0076 3C21     		movs	r1, #60
 587 0078 0948     		ldr	r0, .L35+16
 588 007a FFF7FEFF 		bl	HAL_TIM_Encoder_Start
 589              	.LVL62:
 590              	.L33:
 132:Core/Src/main.c ****   {
 591              		.loc 1 132 3 discriminator 1 view .LVU136
 137:Core/Src/main.c ****     __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, 250);
 592              		.loc 1 137 5 discriminator 1 view .LVU137
 593 007e 0021     		movs	r1, #0
 594 0080 0120     		movs	r0, #1
 595 0082 FFF7FEFF 		bl	MOTOR_Direction
 596              	.LVL63:
 138:Core/Src/main.c ****     // u5_printf("HELLO WORLD!\n");
 597              		.loc 1 138 5 discriminator 1 view .LVU138
 598 0086 024B     		ldr	r3, .L35
 599 0088 1B68     		ldr	r3, [r3]
 600 008a FA22     		movs	r2, #250
 601 008c 5A63     		str	r2, [r3, #52]
 132:Core/Src/main.c ****   {
 602              		.loc 1 132 9 discriminator 1 view .LVU139
 603 008e F6E7     		b	.L33
 604              	.L36:
 605              		.align	2
 606              	.L35:
 607 0090 00000000 		.word	htim1
 608 0094 00000000 		.word	htim2
 609 0098 00000000 		.word	htim3
ARM GAS  C:\Users\86138\AppData\Local\Temp\ccc2taHa.s 			page 21


 610 009c 00000000 		.word	htim4
 611 00a0 00000000 		.word	htim5
 612              		.cfi_endproc
 613              	.LFE65:
 615              		.global	RxBuffer
 616              		.global	motor
 617              		.section	.bss.RxBuffer,"aw",%nobits
 618              		.align	2
 621              	RxBuffer:
 622 0000 00000000 		.space	10
 622      00000000 
 622      0000
 623              		.section	.bss.motor,"aw",%nobits
 624              		.align	2
 625              		.set	.LANCHOR0,. + 0
 628              	motor:
 629 0000 00000000 		.space	40
 629      00000000 
 629      00000000 
 629      00000000 
 629      00000000 
 630              		.text
 631              	.Letext0:
 632              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.07\\arm-none-eabi\\include\\
 633              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.07\\arm-none-eabi\\include\\
 634              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 635              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 636              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 637              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 638              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 639              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 640              		.file 11 "Core/Inc/tim.h"
 641              		.file 12 "Core/Inc/usart.h"
 642              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 643              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 644              		.file 15 "Core/Inc/gpio.h"
 645              		.file 16 "Core/Inc/dma.h"
 646              		.file 17 "<built-in>"
ARM GAS  C:\Users\86138\AppData\Local\Temp\ccc2taHa.s 			page 22


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\86138\AppData\Local\Temp\ccc2taHa.s:16     .text.MOTOR_Direction:00000000 $t
C:\Users\86138\AppData\Local\Temp\ccc2taHa.s:24     .text.MOTOR_Direction:00000000 MOTOR_Direction
C:\Users\86138\AppData\Local\Temp\ccc2taHa.s:55     .text.MOTOR_Direction:00000018 $d
C:\Users\86138\AppData\Local\Temp\ccc2taHa.s:59     .text.MOTOR_Direction:0000001c $t
C:\Users\86138\AppData\Local\Temp\ccc2taHa.s:157    .text.MOTOR_Direction:00000092 $d
C:\Users\86138\AppData\Local\Temp\ccc2taHa.s:161    .text.MOTOR_Direction:00000096 $t
C:\Users\86138\AppData\Local\Temp\ccc2taHa.s:230    .text.MOTOR_Direction:00000100 $d
C:\Users\86138\AppData\Local\Temp\ccc2taHa.s:237    .rodata.HAL_TIM_PeriodElapsedCallback.str1.4:00000000 $d
C:\Users\86138\AppData\Local\Temp\ccc2taHa.s:241    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\86138\AppData\Local\Temp\ccc2taHa.s:248    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\86138\AppData\Local\Temp\ccc2taHa.s:328    .text.HAL_TIM_PeriodElapsedCallback:00000038 $d
C:\Users\86138\AppData\Local\Temp\ccc2taHa.s:338    .text.Error_Handler:00000000 $t
C:\Users\86138\AppData\Local\Temp\ccc2taHa.s:345    .text.Error_Handler:00000000 Error_Handler
C:\Users\86138\AppData\Local\Temp\ccc2taHa.s:377    .text.SystemClock_Config:00000000 $t
C:\Users\86138\AppData\Local\Temp\ccc2taHa.s:384    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\86138\AppData\Local\Temp\ccc2taHa.s:489    .text.main:00000000 $t
C:\Users\86138\AppData\Local\Temp\ccc2taHa.s:496    .text.main:00000000 main
C:\Users\86138\AppData\Local\Temp\ccc2taHa.s:607    .text.main:00000090 $d
C:\Users\86138\AppData\Local\Temp\ccc2taHa.s:621    .bss.RxBuffer:00000000 RxBuffer
C:\Users\86138\AppData\Local\Temp\ccc2taHa.s:628    .bss.motor:00000000 motor
C:\Users\86138\AppData\Local\Temp\ccc2taHa.s:618    .bss.RxBuffer:00000000 $d
C:\Users\86138\AppData\Local\Temp\ccc2taHa.s:624    .bss.motor:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
u5_printf
htim2
htim3
htim4
htim5
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_TIM1_Init
MX_TIM2_Init
MX_TIM3_Init
MX_TIM4_Init
MX_TIM5_Init
MX_UART4_Init
MX_UART5_Init
HAL_TIM_Base_Start_IT
HAL_TIM_PWM_Start
HAL_TIM_Encoder_Start
htim1
